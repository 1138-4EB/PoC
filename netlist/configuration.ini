# EMACS settings: -*-	tab-width: 2; indent-tabs-mode: t -*-
# vim: tabstop=2:shiftwidth=2:noexpandtab
# kate: tab-width 2; replace-tabs off; indent-width 2;
# 
# ==============================================================================
# Authors:				 	Patrick Lehmann
#										Martin Zabel
# 
# Netlist config:		This file stores all available netlists and it's settings.
# 
# Description:
# ------------------------------------
#		Some hints:
#		- each PoC namespace, subnamespace and netlist has a own section
#		- directory names are resolved recursively
##		- if no 'FilesFile' key is given in a testbench section,
##			the key is replaced by 'FilesFile' from section 'DEFAULT'
##			and than resolved.
##		- if no 'iSimTclScript' key is given in a testbench section,
##			the key is replaced by 'iSimTclScript' from section 'DEFAULT'
##			and than resolved.
#
# License:
# ==============================================================================
# Copyright 2007-2015 Technische Universitaet Dresden - Germany
#											Chair for VLSI-Design, Diagnostics and Architecture
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#		http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
#
# Full netlist section example:
#		TODO: 
#
[DEFAULT]
XSTConstraintsFile =	${PoC:xstDir}/default.xcf
XSTFilterFile =				${PoC:xstDir}/default.filter

XSTOption.UseNewParser = NO
XSTOption.InputFormat = mixed
XSTOption.OutputFormat = NGC
XSTOption.OptimizationMode = Speed
XSTOption.OptimizationLevel = 2
XSTOption.PowerReduction = NO
XSTOption.IgnoreSynthesisConstraintsFile = NO
XSTOption.KeepHierarchy = Soft
XSTOption.NetListHierarchy = As_Optimized
XSTOption.GenerateRTLView = NO
XSTOption.Globaloptimization = AllClockNets
XSTOption.ReadCores = YES
XSTOption.WriteTimingConstraints = NO
XSTOption.CrossClockAnalysis = YES
XSTOption.HierarchySeparator = /
XSTOption.BusDelimiter = <>
XSTOption.Case = Maintain
XSTOption.SliceUtilizationRatio = 100
XSTOption.BRAMUtilizationRatio = 100
XSTOption.DSPUtilizationRatio = 100
XSTOption.LUTCombining = Auto
XSTOption.ReduceControlSets = Auto
XSTOption.Verilog2001 = YES
XSTOption.FSMExtract = YES
XSTOption.FSMEncoding = Auto
XSTOption.FSMSafeImplementation = NO
XSTOption.FSMStyle = LUT
XSTOption.RAMExtract = YES
XSTOption.RAMStyle = Auto
XSTOption.ROMExtract = YES
XSTOption.ROMStyle = Auto
XSTOption.MUXExtract = YES
XSTOption.MUXStyle = Auto
XSTOption.DecoderExtract = YES
XSTOption.PriorityExtract = YES
XSTOption.ShRegExtract = YES
XSTOption.ShiftExtract = YES
XSTOption.XorCollapse = YES
XSTOption.AutoBRAMPacking = NO
XSTOption.ResourceSharing = YES
XSTOption.ASyncToSync = NO
XSTOption.UseDSP48 = Auto
XSTOption.IOBuf = YES
XSTOption.MaxFanOut = 100000
XSTOption.BufG = 32
XSTOption.RegisterDuplication = YES
XSTOption.RegisterBalancing = NO
XSTOption.SlicePacking = YES
XSTOption.OptimizePrimitives = NO
XSTOption.UseClockEnable = Auto
XSTOption.UseSyncSet = Auto
XSTOption.UseSyncReset = Auto
XSTOption.PackIORegistersIntoIOBs = Auto
XSTOption.EquivalentRegisterRemoval = YES
XSTOption.SliceUtilizationRatioMaxMargin = 5

[BOARDS]
ML505 = XC5VLX50T-1FF1136
ML605 = XC6VLX240T-1FF1156
KC705 = XC7K325T-2FFG900
VC707 = XC7VX485T-2FFG1761

[SPECIAL]
Device = ERROR
OutputDir = ERROR

[PoC]
srcDir =	${PoC:InstallationDirectory}/${PoC.DirectoryNames:HDLSourceFiles}
nlDir =		${PoC:InstallationDirectory}/${PoC.DirectoryNames:NetListFiles}
xstDir =	${PoC:InstallationDirectory}/${PoC.DirectoryNames:ISESynthesisFiles}

[PoC.arith]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.arith}
xstDir =		${PoC:xstDir}/${PoC.NamespaceDirectoryNames:PoC.arith}

[PoC.arith.counter_bcd]
srcDir =							${PoC.arith:srcDir}
xstDir =							${PoC.arith:xstDir}
Type =								XilinxSynthesis
TopModule =						arith_counter_bcd
FileListFile =				${xstDir}/${TopModule}.files
#XSTConstraintsFile =	${xstDir}/${TopModule}.xcf
#XSTOption.UseNewParser = YES
XSTOption.Generics =	digits=9

[PoC.io]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.io}

[PoC.io.lcd]
srcDir =		${PoC.io:srcDir}/${PoC.NamespaceDirectoryNames:PoC.io.lcd}

[PoC.io.lcd.ChipScopeVIO]
srcDir =							${PoC.io.lcd:srcDir}
Type =								XilinxCoreGenerator
IPCoreName =					lcd_ChipScopeVIO
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ncf

[PoC.mem]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.mem}
xstDir =		${PoC:xstDir}/${PoC.NamespaceDirectoryNames:PoC.mem}

[PoC.mem.ocram]
srcDir =		${PoC.mem:srcDir}/${PoC.NamespaceDirectoryNames:PoC.mem.ocram}
xstDir =		${PoC.mem:xstDir}/${PoC.NamespaceDirectoryNames:PoC.mem.ocram}

[PoC.mem.ocram.esdp]
srcDir =							${PoC.mem.ocram:srcDir}
xstDir =							${PoC.mem.ocram:xstDir}
Type =								XilinxSynthesis
TopModule =						ocram_esdp
FileListFile =				${xstDir}/${TopModule}.files
#XSTConstraintsFile =	${xstDir}/${TopModule}.xcf
XSTOption.UseNewParser = YES
XSTOption.Generics =	a_bits=8 | d_bits=16

[PoC.mem.ocram.sdp]
srcDir =							${PoC.mem.ocram:srcDir}
xstDir =							${PoC.mem.ocram:xstDir}
Type =								XilinxSynthesis
TopModule =						ocram_sdp
FileListFile =				${xstDir}/${TopModule}.files
#XSTConstraintsFile =	${xstDir}/${TopModule}.xcf
XSTOption.UseNewParser = YES
XSTOption.Generics =	a_bits=8 | d_bits=16

[PoC.mem.ocram.sp]
srcDir =							${PoC.mem.ocram:srcDir}
xstDir =							${PoC.mem.ocram:xstDir}
Type =								XilinxSynthesis
TopModule =						ocram_sp
FileListFile =				${xstDir}/${TopModule}.files
#XSTConstraintsFile =	${xstDir}/${TopModule}.xcf
XSTOption.UseNewParser = YES
XSTOption.Generics =	a_bits=8 | d_bits=16

[PoC.mem.ocram.tdp]
srcDir =							${PoC.mem.ocram:srcDir}
xstDir =							${PoC.mem.ocram:xstDir}
Type =								XilinxSynthesis
TopModule =						ocram_tdp
FileListFile =				${xstDir}/${TopModule}.files
#XSTConstraintsFile =	${xstDir}/${TopModule}.xcf
XSTOption.UseNewParser = YES
XSTOption.Generics =	a_bits=8 | d_bits=16

[PoC.net]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.net}
			 
[PoC.net.eth]
srcDir =		${PoC.net:srcDir}/${PoC.NamespaceDirectoryNames:PoC.net.eth}

[PoC.net.eth.GMII_SGMII_PCS_Virtex5]
srcDir =							${PoC.net.eth:srcDir}
Type =								XilinxCoreGenerator
IPCoreName =					eth_GMII_SGMII_PCS_Virtex5
CoreGeneratorFile =		${srcDir}/Xilinx/Virtex5/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.vhdl

[PoC.net.eth.GMII_SGMII_PCS_Virtex6]
srcDir =							${PoC.net.eth:srcDir}
Type =								XilinxCoreGenerator
IPCoreName =					eth_GMII_SGMII_PCS_Virtex6
CoreGeneratorFile =		${srcDir}/Xilinx/Virtex6/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.vhdl
			 
[PoC.net.eth.GMII_SGMII_PCS_Series7]
srcDir =							${PoC.net.eth:srcDir}
Type =								XilinxCoreGenerator
IPCoreName =					eth_GMII_SGMII_PCS_Series7
CoreGeneratorFile =		${srcDir}/Xilinx/Series7/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.vhdl
			 
[PoC.sata]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.sata}/chipscope
relDir =		${PoC.NamespaceDirectoryNames:PoC.sata}

[PoC.sata.TransceiverMonitor_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_TransceiverMonitor_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
			 
[PoC.sata.TransceiverLayer_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_TransceiverLayer_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
			 
[PoC.sata.PhysicalLayer_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_PhysicalLayer_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
			 
[PoC.sata.LinkLayer_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_LinkLayer_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
			 
[PoC.sata.TransportLayer_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_TransportLayer_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
			 
[PoC.sata.StreamingLayer_ILA]
srcDir =							${PoC.sata:srcDir}
relDir =							${PoC.sata:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					sata_StreamingLayer_ILA
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.sata.StreamingController]
srcDir =							${PoC.sata:srcDir}
Type =								XilinxSynthesis
IPCoreName =					sata_StreamingController
FileListFile =				${srcDir}/${IPCoreName}.files
XSTOptionsFile =			${srcDir}/${IPCoreName}.xst
XSTConstraintsFile =	${srcDir}/${IPCoreName}.xcf
XSTOption.UseNewParser = YES
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${IPCoreName}.ngc

[PoC.xil]
srcDir =		${PoC:srcDir}/${PoC.NamespaceDirectoryNames:PoC.xil}
relDir =		${PoC.NamespaceDirectoryNames:PoC.xil}

[PoC.xil.ChipScopeICON_1]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_1
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_2]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_2
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_3]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_3
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_4]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_4
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_5]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_5
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_6]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_6
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_7]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_7
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_8]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_8
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_9]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_9
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_10]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_10
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_11]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_11
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_12]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_12
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_13]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_13
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_14]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_14
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf

[PoC.xil.ChipScopeICON_15]
srcDir =							${PoC.xil:srcDir}
relDir =							${PoC.xil:relDir}
Type =								XilinxCoreGenerator
IPCoreName =					xil_ChipScopeICON_15
CoreGeneratorFile =		${srcDir}/${IPCoreName}.xco
Copy = ${SPECIAL:OutputDir}/${IPCoreName}.ngc -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ngc
			 ${SPECIAL:OutputDir}/${IPCoreName}.vhd -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.vhdl
			 ${SPECIAL:OutputDir}/${IPCoreName}.ncf -> ${PoC:nlDir}/${SPECIAL:Device}/${relDir}/${IPCoreName}.ncf
