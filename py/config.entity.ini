# EMACS settings: -*-	tab-width: 2; indent-tabs-mode: t -*-
# vim: tabstop=2:shiftwidth=2:noexpandtab
# kate: tab-width 2; replace-tabs off; indent-width 2;
# 
# ==============================================================================
# Authors:				 	Patrick Lehmann
# 
# Config file:			Global configuration file
# 
# Description:
# ------------------------------------
#		This file defines:
#		- common directory names
#		- directory names for sub namespaces
#		- prefixes for namespaces
#
# License:
# ==============================================================================
# Copyright 2007-2016 Technische Universitaet Dresden - Germany
#											Chair for VLSI-Design, Diagnostics and Architecture
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#		http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
[IP.DEFAULT]
Name =							%{Name}
EntityPrefix =			${NS.%{Parent}:Name}
FilesFile =					${SrcDir}/${EntityPrefix}_${Name}.files
# VHDLTestbench =			TB.%{Path}
# CocoTestbench =		COCOTB.%{Path}
# XSTNetlist =						NL.%{Path}
RelDir =						${NS.%{Parent}:RelDir}
SrcDir =						${NS.%{Parent}:SrcDir}
TBDir =							${NS.%{Parent}:TBDir}
SimDir =						${NS.%{Parent}:SimDir}
NLDir =							${NS.%{Parent}:NLDir}
XSTDir =						${NS.%{Parent}:XSTDir}
QIIDir =						${NS.%{Parent}:QIIDir}


# PoC.alt
# ==============================================================================

# PoC.arith
# ==============================================================================
[IP.arith.addw]
Description =				Adder for wide inputs
tb =								VHDLTestbench

[IP.arith.carrychain_inc]

[IP.arith.counter_free]

[IP.arith.counter_bcd]

[IP.arith.counter_gray]

[IP.arith.counter_ring]

[IP.arith.convert_bin2bcd]

[IP.arith.div]

[IP.arith.firstone]

[IP.arith.muls_wide]

[IP.arith.prefix_and]
tb =								VHDLTestbench

[IP.arith.prefix_or]
tb =								VHDLTestbench

[IP.arith.prng]
Description =				Pseudo Random Number Generator (PRNG)
tb =								VHDLTestbench
nl2 =								QuartusNetlist

[IP.arith.same]

[IP.arith.scaler]

[IP.arith.shifter_barrel]
nl =								XSTNetlist

[IP.arith.sqrt]

# PoC.bus
# ==============================================================================
[IP.bus.Arbiter]

# PoC.bus.stream
# ------------------------------------------------------------------------------
[IP.bus.stream.Buffer]

[IP.bus.stream.DeMux]

[IP.bus.stream.FrameGenerator]

[IP.bus.stream.Mirror]

[IP.bus.stream.Mux]

[IP.bus.stream.Sink]

[IP.bus.stream.Source]

# PoC.bus.wb
# ------------------------------------------------------------------------------
[IP.bus.wb.fifo_adapter]

[IP.bus.wb.ocram_adapter]

[IP.bus.wb.uart_wrapper]

# PoC.cache
# ==============================================================================
[IP.cache.par]
nl =								XSTNetlist
cocotb =						CocoTestbench

[IP.cache.replacement_policy]

[IP.cache.tagunit_par]

[IP.cache.tagunit_seq]

# PoC.comm
# ==============================================================================
[IP.comm.crc]

[IP.comm.scamble]

# PoC.common
# ==============================================================================
[IP.common.config]
tb =								VHDLTestbench

#[IP.common.physical]
#TBDir =						${PoC.common:TBDir}
#SimDir = 					${PoC.common:SimDir}
#TestbenchModule =	physical_tb

[IP.common.strings]
tb =								VHDLTestbench

#[IP.common.utils]
#TBDir =						${PoC.common:TBDir}
#SimDir = 					${PoC.common:SimDir}
#TestbenchModule =	utils_tb

#[IP.common.vectors]
#TBDir =						${PoC.common:TBDir}
#SimDir = 					${PoC.common:SimDir}
#TestbenchModule =	vectors_tb

# PoC.dstruct
# ==============================================================================
[IP.dstruct.deque]
tb =								VHDLTestbench

[IP.dstruct.stack]
tb =								VHDLTestbench

# PoC.fifo
# ==============================================================================
[IP.fifo.cc_got]
tb =								VHDLTestbench

[IP.fifo.cc_got_tempgot]
tb =								VHDLTestbench

[IP.fifo.cc_got_tempput]
tb =								VHDLTestbench

#[IP.fifo.dc_got]
##
[IP.fifo.ic_got]
tb =								VHDLTestbench

[IP.fifo.ic_assembly]
tb =								VHDLTestbench

[IP.fifo.glue]
tb =								VHDLTestbench

# PoC.io
# ==============================================================================
[IP.io.Debounce]
tb =								VHDLTestbench

[IP.io.7SegmentMux_BCD]

[IP.io.7SegmentMux_HEX]

[IP.io.FanControl]

[IP.io.FrequencyCounter]

[IP.io.GlitchFilter]

[IP.io.PulseWidthModulation]

[IP.io.TimingCounter]

# PoC.io.ddrio
# ------------------------------------------------------------------------------
[IP.io.ddrio.in]
tb =								VHDLTestbench

[IP.io.ddrio.inout]
tb =								VHDLTestbench

[IP.io.ddrio.out]
tb =								VHDLTestbench

# PoC.io.device
# ------------------------------------------------------------------------------

# PoC.io.iic
# ------------------------------------------------------------------------------
[IP.io.iic.BusController]

[IP.io.iic.Controller]

[IP.io.iic.Switch_PCA9548A]

# PoC.io.jtag
# ------------------------------------------------------------------------------

# PoC.io.lcd
# ------------------------------------------------------------------------------
[IP.io.lcd.dotmatrix]

[IP.io.lcd.LCDBuffer]

[IP.io.lcd.LCDSynchronizer]

# PoC.io.mdio
# ------------------------------------------------------------------------------
[IP.io.mdio.IIC_Adapter]

[IP.io.mdio.Controller]

# PoC.io.ow
# ------------------------------------------------------------------------------
[IP.io.ow.BusController]

[IP.io.ow.Controller]

# PoC.io.pio
# ------------------------------------------------------------------------------
[IP.io.pio.fifo]
tb =								VHDLTestbench

# PoC.io.pmod
# ------------------------------------------------------------------------------
[IP.io.pmod.KYPD]

[IP.io.pmod.SSD]

[IP.io.pmod.USBUART]

# PoC.io.uart
# ------------------------------------------------------------------------------
[IP.io.uart.rx]

[IP.io.uart.tx]

[IP.io.uart.fifo]

[IP.io.uart.ft245]

# PoC.mem
# ==============================================================================

# PoC.mem.is61lv
# ------------------------------------------------------------------------------

# PoC.mem.is61nlp
# ------------------------------------------------------------------------------

# PoC.mem.lut
# ------------------------------------------------------------------------------
[IP.mem.lut.Sine]
tb =								VHDLTestbench

# PoC.mem.ocram
# ------------------------------------------------------------------------------
[IP.mem.ocram.esdp]

[IP.mem.ocram.sdp]

[IP.mem.ocram.sp]

[IP.mem.ocram.tdp]

# PoC.mem.ocrom
# ------------------------------------------------------------------------------
[IP.mem.ocrom.sp]

[IP.mem.ocrom.dp]

# PoC.mem.sdram
# ------------------------------------------------------------------------------
[IP.mem.sdram.ctrl_s3esk]

[IP.mem.sdram.ctrl_de0]

# PoC.misc
# ==============================================================================
[IP.misc.Delay]

[IP.misc.FrequencyMeasurement]

[IP.misc.PulseTrain]

[IP.misc.Sequencer]

[IP.misc.StrobeGenerator]

[IP.misc.StrobeLimiter]

[IP.misc.WorkAligner]

# PoC.misc.filter
# ------------------------------------------------------------------------------
[IP.misc.filter.and]

[IP.misc.filter.mean]

[IP.misc.filter.or]

# PoC.misc.gearbox
# ------------------------------------------------------------------------------
[IP.misc.gearbox.down_cc]

[IP.misc.gearbox.down_dc]

[IP.misc.gearbox.up_cc]

[IP.misc.gearbox.up_dc]

# PoC.misc.stat
# ------------------------------------------------------------------------------
[IP.misc.stat.Average]
tb =								VHDLTestbench

[IP.misc.stat.Histogram]
tb =								VHDLTestbench

[IP.misc.stat.Minimum]
tb =								VHDLTestbench

[IP.misc.stat.Maximum]
tb =								VHDLTestbench

# PoC.misc.sync
# ------------------------------------------------------------------------------
[IP.misc.sync.Bits]
tb =								VHDLTestbench

[IP.misc.sync.Reset]
tb =								VHDLTestbench

[IP.misc.sync.Strobe]
tb =								VHDLTestbench

[IP.misc.sync.Vector]
tb =								VHDLTestbench

[IP.misc.sync.Command]
tb =								VHDLTestbench

# PoC.net
# ==============================================================================
[IP.net.FrameChecksum]

[IP.net.FrameLoopback]

# PoC.net.arp
# ------------------------------------------------------------------------------
[IP.net.arp.BroadCast_Receiver]

[IP.net.arp.BroadCast_Requester]

[IP.net.arp.Cache]

[IP.net.arp.IPPool]

[IP.net.arp.Tester]

[IP.net.arp.UniCast_Receiver]

[IP.net.arp.UniCast_Responder]

[IP.net.arp.Wrapper]

# PoC.net.eth
# ------------------------------------------------------------------------------
[IP.net.eth.GEMAC_GMII]

[IP.net.eth.GEMAC_RX]

[IP.net.eth.GEMAC_TX]

[IP.net.eth.PHYController]

[IP.net.eth.PHYController_Marvell_88E1111]

[IP.net.eth.Wrapper]

# PoC.net.icmpv4
# ------------------------------------------------------------------------------
[IP.net.icmpv4.RX]

[IP.net.icmpv4.TX]

[IP.net.icmpv4.Wrapper]

# PoC.net.icmpv6
# ------------------------------------------------------------------------------
[IP.net.icmpv6.RX]

[IP.net.icmpv6.TX]

[IP.net.icmpv6.Wrapper]

# PoC.net.ipv4
# ------------------------------------------------------------------------------
[IP.net.ipv4.FrameLoopback]

[IP.net.ipv4.RX]

[IP.net.ipv4.TX]

[IP.net.ipv4.Wrapper]

# PoC.net.ipv6
# ------------------------------------------------------------------------------
[IP.net.ipv6.FrameLoopback]

[IP.net.ipv6.RX]

[IP.net.ipv6.TX]

[IP.net.ipv6.Wrapper]

# PoC.net.mac
# ------------------------------------------------------------------------------
[IP.net.mac.FrameLoopback]

[IP.net.mac.RX_DestMAC_Switch]

[IP.net.mac.RX_SrcMAC_Filter]

[IP.net.mac.RX_Type_Switch]

[IP.net.mac.TX_DestMAC_Prepender]

[IP.net.mac.TX_SrcMAC_Prepender]

[IP.net.mac.TX_Type_Prepender]

[IP.net.mac.Wrapper]

# PoC.net.ndp
# ------------------------------------------------------------------------------
[IP.net.ndp.DestinationCache]

[IP.net.ndp.FSMQuery]

[IP.net.ndp.NeighborCache]

[IP.net.ndp.Wrapper]

# PoC.net.stack
# ------------------------------------------------------------------------------
[IP.net.stack.MAC]

[IP.net.stack.IPv4]

[IP.net.stack.IPv6]

[IP.net.stack.UDPv4]

[IP.net.stack.UDPv6]

# PoC.net.udp
# ------------------------------------------------------------------------------
[IP.net.udp.FrameLoopback]

[IP.net.udp.RX]

[IP.net.udp.TX]

[IP.net.udp.Wrapper]

# PoC.sata
# ==============================================================================
[IP.sata.TransceiverLayer]

[IP.sata.PhysicalLAyer]

[IP.sata.LinkLayer]

[IP.sata.TransportLayer]

[IP.sata.StreamingLayer]

[IP.sata.StreamingStack]

# PoC.sim
# ==============================================================================
[IP.sim.ClockGenerator]
tb =								VHDLTestbench

[IP.sim.Waveform]
tb =								VHDLTestbench

# PoC.sort
# ==============================================================================
[IP.sort.ExpireList]
tb =								VHDLTestbench

[IP.sort.InsertSort]
tb =								VHDLTestbench

[IP.sort.LeastFrequentlyUsed]
tb =								VHDLTestbench

[IP.sort.lru_cache]
tb =								VHDLTestbench
cocotb =						CocoTestbench

[IP.sort.lru_list]
tb =								VHDLTestbench
cocotb =						CocoTestbench

# PoC.sort.sortnet
# ------------------------------------------------------------------------------
[IP.sort.sortnet.BitonicSort]
tb =								VHDLTestbench

[IP.sort.sortnet.OddEvenMergeSort]
tb =								VHDLTestbench

[IP.sort.sortnet.OddEvenSort]
tb =								VHDLTestbench

[IP.sort.sortnet.MergeSort_Streamed]

[IP.sort.sortnet.Transform]

[IP.sort.sortnet.Stream_Adapter]
tb =								VHDLTestbench

[IP.sort.sortnet.Stream_Adapter2]
tb =								VHDLTestbench

# PoC.xil
# ==============================================================================
[IP.xil.BSCAN]

[IP.xil.ChipScopeICON]

[IP.xil.ChipScopeILA_8x4k]

[IP.xil.ChipScopeILA_8x32k]

[IP.xil.ChipScopeILA_16x4k]

[IP.xil.ChipScopeILA_32x4k]

[IP.xil.ChipScopeILA_64x4k]

[IP.xil.ChipScopeVIO_8x8]

[IP.xil.Reconfigurator]

[IP.xil.SystemMonitor]

# PoC.xil.mig
# ------------------------------------------------------------------------------
[IP.xil.mig.Atlys_1x128]
nl =								XSTNetlist
cg =								CoreGenNetlist

[IP.xil.mig.KC705_MT8JTF12864HZ_1G6]

