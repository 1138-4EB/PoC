# EMACS settings: -*-	tab-width: 2; indent-tabs-mode: t -*-
# vim: tabstop=2:shiftwidth=2:noexpandtab
# kate: tab-width 2; replace-tabs off; indent-width 2;
# 
# ==============================================================================
# Authors:				 	Patrick Lehmann
#										Martin Zabel
# 
# Netlist config:		This file stores all available netlists and it's settings.
# 
# Description:
# ------------------------------------
#		Some hints:
#		- each PoC namespace, subnamespace and netlist has a own section
#		- directory names are resolved recursively
##		- if no 'FilesFile' key is given in a testbench section,
##			the key is replaced by 'FilesFile' from section 'DEFAULT'
##			and than resolved.
##		- if no 'iSimTclScript' key is given in a testbench section,
##			the key is replaced by 'iSimTclScript' from section 'DEFAULT'
##			and than resolved.
#
# License:
# ==============================================================================
# PostCopy.Ruleright 2007-2016 Technische Universitaet Dresden - Germany
#											Chair for VLSI-Design, Diagnostics and Architecture
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#		http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
#
# Full netlist section example:
#		TODO: 
#
[CG.DEFAULT]
TopLevel =								${NS.%{GrantParent}:Name}_${IP.%{Parent}:Name}
CoreGeneratorFile =				${SrcDir}/${TopLevel}.xco

RelDir =									${IP.%{Parent}:RelDir}
SrcDir =									${IP.%{Parent}:SrcDir}
NLDir =										${IP.%{Parent}:NLDir}

# empty task lists
PreCopy.Rules =						
PreReplace.Rules =				
PostCopy.Rules =					
PostReplace.Rules =				

[QII.DEFAULT]
TopLevel =								${NS.%{GrantParent}:Name}_${IP.%{Parent}:Name}
RelDir =									${IP.%{Parent}:RelDir}
SrcDir =									${IP.%{Parent}:SrcDir}
NLDir =										${IP.%{Parent}:NLDir}
QIIDir =									${IP.%{Parent}:QIIDir}

# FilesFile =								${IP.%{Parent}:FilesFile}
FilesFile =								${SrcDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =								

# empty task lists
PreCopy.Rules =						
PreReplace.Rules =				
PostCopy.Rules =					
PostReplace.Rules =				

[XST.DEFAULT]
TopLevel =								${NS.%{GrantParent}:Name}_${IP.%{Parent}:Name}
RelDir =									${IP.%{Parent}:RelDir}
SrcDir =									${IP.%{Parent}:SrcDir}
NLDir =										${IP.%{Parent}:NLDir}
XSTDir =									${IP.%{Parent}:XSTDir}

# FilesFile =								${IP.%{Parent}:FilesFile}
FilesFile =								${XSTDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.files
RulesFile =								${XSTDir}/${IP.%{Parent}:EntityPrefix}_${IP.%{Parent}:Name}.rules
XSTNoConstraintsFile =		${NS:XSTDir}/empty.xcf
XSTConstraintsFile =			${NS:XSTDir}/default.xcf
XSTOptionsFile =					${NS:XSTDir}/${SPECIAL:DeviceSeries}.xst
XSTFilterFile =						${NS:XSTDir}/default.filter

# empty task lists
PreCopy.Rules =						
PreReplace.Rules =				
PostCopy.Rules =					
PostReplace.Rules =				

XSTOption.UseNewParser = YES
XSTOption.InputFormat = mixed
XSTOption.OutputFormat = NGC
XSTOption.OptimizationMode = Speed
XSTOption.OptimizationLevel = 2
XSTOption.PowerReduction = NO
XSTOption.IgnoreSynthesisConstraintsFile = NO
XSTOption.KeepHierarchy = Soft
XSTOption.NetListHierarchy = As_Optimized
XSTOption.GenerateRTLView = NO
XSTOption.Globaloptimization = AllClockNets
XSTOption.ReadCores = YES
XSTOption.WriteTimingConstraints = NO
XSTOption.CrossClockAnalysis = YES
XSTOption.HierarchySeparator = /
XSTOption.BusDelimiter = <>
XSTOption.Case = Maintain
XSTOption.SliceUtilizationRatio = 100
XSTOption.BRAMUtilizationRatio = 100
XSTOption.DSPUtilizationRatio = 100
XSTOption.LUTCombining = Auto
XSTOption.ReduceControlSets = Auto
XSTOption.Verilog2001 = YES
XSTOption.FSMExtract = YES
XSTOption.FSMEncoding = Auto
XSTOption.FSMSafeImplementation = NO
XSTOption.FSMStyle = LUT
XSTOption.RAMExtract = YES
XSTOption.RAMStyle = Auto
XSTOption.ROMExtract = YES
XSTOption.ROMStyle = Auto
XSTOption.MUXExtract = YES
XSTOption.MUXStyle = Auto
XSTOption.DecoderExtract = YES
XSTOption.PriorityExtract = YES
XSTOption.ShRegExtract = YES
XSTOption.ShiftExtract = YES
XSTOption.XorCollapse = YES
XSTOption.AutoBRAMPacking = NO
XSTOption.ResourceSharing = YES
XSTOption.ASyncToSync = NO
XSTOption.UseDSP48 = Auto
XSTOption.IOBuf = NO
XSTOption.MaxFanOut = 100000
XSTOption.BufG = 32
XSTOption.RegisterDuplication = YES
XSTOption.RegisterBalancing = NO
XSTOption.SlicePacking = YES
XSTOption.OptimizePrimitives = NO
XSTOption.UseClockEnable = Auto
XSTOption.UseSyncSet = Auto
XSTOption.UseSyncReset = Auto
XSTOption.PackIORegistersIntoIOBs = Auto
XSTOption.EquivalentRegisterRemoval = YES
XSTOption.SliceUtilizationRatioMaxMargin = 5

[SPECIAL]
Device =				ERROR
DeviceSeries =	ERROR
OutputDir =			ERROR

# [PoC]
# ==============================================================================

# PoC.arith
# ==============================================================================
[XST.arith.counter_bcd.nl]
XSTOption.Generics =	DIGITS=9

[XST.arith.prng.nl]
XSTOption.Generics =	BITS=8

[QII.arith.prng.nl2]


[XST.arith.shifter_barrel.nl]
XSTOption.Generics =	BITS=32


# PoC.cache
# ==============================================================================
[XST.cache.par.nl]

# PoC.io
# ==============================================================================
[XST.io.FanControl.nl]
XSTOption.Generics =	CLOCK_FREQ=100MHz ADD_INPUT_SYNCHRONIZERS=TRUE ENABLE_TACHO=FALSE

# PoC.io.ddrio
# ------------------------------------------------------------------------------
[XST.io.ddrio.inout.nl]
XSTConstraintsFile =	${XSTDir}/ddrio_inout.xcf
XSTOption.Generics =	BITS=2

# PoC.io.iic
# ------------------------------------------------------------------------------

# PoC.io.lcd
# ------------------------------------------------------------------------------
[CG.io.lcd.ChipScopeVIO.nl]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

# PoC.io.mdio
# ------------------------------------------------------------------------------

# PoC.io.ps2
# ------------------------------------------------------------------------------

# PoC.io.ow
# ------------------------------------------------------------------------------

# PoC.io.uart
# ------------------------------------------------------------------------------
[XST.io.uart.fifo.nl]
XSTOption.Generics =	CLOCK_FREQ=100MHz BAUDRATE=115200Bd

# PoC.mem
# ==============================================================================

# PoC.mem.ocram
# ------------------------------------------------------------------------------
[XST.mem.ocram.esdp.nl]
XSTOption.Generics =	a_bits=8 d_bits=16

[XST.mem.ocram.sdp.nl]
XSTOption.Generics =	a_bits=8 d_bits=16

[XST.mem.ocram.sp.nl]
XSTOption.Generics =	a_bits=8 d_bits=16

[XST.mem.ocram.tdp.nl]
XSTOption.Generics =	a_bits=8 d_bits=16

# PoC.misc
# ==============================================================================

# PoC.misc.gearbox
# ------------------------------------------------------------------------------
[XST.misc.gearbox.down_cc.nl]
XSTConstraintsFile =	${XSTNoConstraintsFile}
XSTOption.Generics =	INPUT_BITS=32 OUTPUT_BITS=8 ADD_INPUT_REGISTERS=TRUE ADD_OUTPUT_REGISTERS=TRUE

[XST.misc.gearbox.down_dc.nl]
XSTConstraintsFile =	${XSTNoConstraintsFile}
XSTOption.Generics =	INPUT_BITS=32 OUTPUT_BITS=8 ADD_INPUT_REGISTERS=TRUE ADD_OUTPUT_REGISTERS=TRUE

[XST.misc.gearbox.up_cc.nl]
XSTConstraintsFile =	${XSTNoConstraintsFile}
XSTOption.Generics =	INPUT_BITS=8 OUTPUT_BITS=32 ADD_INPUT_REGISTERS=TRUE

[XST.misc.gearbox.up_dc.nl]
XSTConstraintsFile =	${XSTNoConstraintsFile}
XSTOption.Generics =	INPUT_BITS=8 OUTPUT_BITS=32 ADD_INPUT_REGISTERS=TRUE

# PoC.net
# ==============================================================================
			 
# PoC.net.eth
# ------------------------------------------------------------------------------
[XST.net.eth.GMII_SGMII_PCS_Virtex5.nl]
CoreGeneratorFile =		${SrcDir}/Xilinx/Virtex5/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl

[XST.net.eth.GMII_SGMII_PCS_Virtex6.nl]
CoreGeneratorFile =		${SrcDir}/Xilinx/Virtex6/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 
[XST.net.eth.GMII_SGMII_PCS_Series7.nl]
CoreGeneratorFile =		${SrcDir}/Xilinx/Series7/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl

[XST.net.eth10g.PCS_PMA_Series7.nl]
CoreGeneratorFile =		${SrcDir}/Xilinx/Series7/${TopLevel}.xco
PostCopy.Rule =		${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
					${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
					${SPECIAL:OutputDir}/${TopLevel}/example_design/${TopLevel}_block.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_block.vhdl
					${SPECIAL:OutputDir}/${TopLevel}/example_design/gtx/${TopLevel}_gtwizard_10gbaser.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_gtwizard_10gbaser.vhdl
					${SPECIAL:OutputDir}/${TopLevel}/example_design/gtx/${TopLevel}_gtwizard_10gbaser_gt.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_gtwizard_10gbaser_gt.vhdl
PostReplace.Rule =	${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "-- synthesis translate_off\n" -> ""
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "end eth10g_PCS_PMA_Series7;\n" -> "end eth10g_PCS_PMA_Series7;\n\n-- synthesis translate_off"

# PoC.sata
# ==============================================================================
[XST.sata.TransceiverMonitor_ILA.nl]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[XST.sata.TransceiverLayer_ILA.nl]
CoreGeneratorFile =		${SrcDir}/chipscope/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
			 
[XST.sata.PhysicalLayer_ILA.nl]
CoreGeneratorFile =		${SrcDir}/chipscope/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
			 
[XST.sata.LinkLayer_ILA.nl]
CoreGeneratorFile =		${SrcDir}/chipscope/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
			 
[XST.sata.TransportLayer_ILA.nl]
CoreGeneratorFile =		${SrcDir}/chipscope/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf
			 
[XST.sata.StreamingLayer_ILA.nl]
CoreGeneratorFile =		${SrcDir}/chipscope/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[XST.sata.StreamingStack.nl]
XSTConstraintsFile =	${XSTNoConstraintsFile}
XSTOption.Generics =	DEBUG=FALSE ENABLE_CHIPSCOPE=FALSE ENABLE_DEBUGPORT=FALSE REFCLOCK_FREQ=150MHz INITIAL_SATA_GENERATION=2 ALLOW_SPEED_NEGOTIATION=FALSE LOGICAL_BLOCK_SIZE=8KiB
#PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${TopLevel}.ngc

# PoC.sort
# ==============================================================================

# PoC.sort.sortnet
# ------------------------------------------------------------------------------
[XST.sort.sortnet.OddEvenSort.nl]
XSTOption.Generics =	INPUTS=64 KEY_BITS=32 DATA_BITS=32 PIPELINE_STAGE_AFTER=3 ADD_OUTPUT_REGISTERS=TRUE

[XST.sort.sortnet.BitonicSort.nl]
XSTOption.Generics =	INPUTS=32 KEY_BITS=32 DATA_BITS=32 PIPELINE_STAGE_AFTER=2

# PoC.xil
# ==============================================================================
[CG.xil.ChipScopeICON_1]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_2]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_3]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_4]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_5]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_6]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_7]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_8]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_9]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_10]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_11]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_12]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_13]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_14]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeICON_15]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeILA_8x4k]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeILA_8x32k]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeILA_16x4k]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeILA_32x4k]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

[CG.xil.ChipScopeVIO_8x8]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
			 ${SPECIAL:OutputDir}/${TopLevel}.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
			 ${SPECIAL:OutputDir}/${TopLevel}.ncf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

# PoC.xil.mig
# ==============================================================================
# step 1: coregen
[CG.xil.mig.Atlys_1x128.cg]
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco

# step 2: generate netlist
[XST.xil.mig.Atlys_1x128.nl]
Dependencies =				CG.xil.mig.Atlys_1x128.cg
XSTConstraintsFile =	${XSTDir}/${TopLevel}.xcf
# example for different clock and no clock buffer
#XSTOption.Generics =	C3_CLKOUT2_DIVIDE=8 C3_INPUT_CLK_TYPE="NONE"
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
		 	 ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_top.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
PostReplace.Rule = ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :d: "(architecture arc of ${TopLevel} is).*(end  arc;)" -> "\1\nbegin\n\2"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :d: "generic.*port" -> "port"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "C3_NUM_DQ_PINS" -> "16"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "C3_MEM_ADDR_WIDTH" -> "13"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "C3_MEM_BANKADDR_WIDTH" -> "3"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "C3_P0_MASK_SIZE" -> "16"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "C3_P0_DATA_PORT_SIZE" -> "128"

# step 1: coregen
[XST.xil.mig.KC705_MT8JTF12864HZ_1G6.cg]
PreCopy.Rule = ${SrcDir}/${TopLevel}.prj -> ${SPECIAL:OutputDir}/${TopLevel}/mig.prj
CoreGeneratorFile =		${SrcDir}/${TopLevel}.xco
PostCopy.Rule =	${tempDir}/user_design/rtl/ecc/mig_7series_v1_9_ecc_buf.v -> ${dstDir}/mig_7series_v1_9_ecc_buf.v
				${tempDir}/user_design/rtl/ecc/mig_7series_v1_9_ecc_gen.v -> ${dstDir}/mig_7series_v1_9_ecc_gen.v
				${tempDir}/user_design/rtl/ecc/mig_7series_v1_9_ecc_merge_enc.v -> ${dstDir}/mig_7series_v1_9_ecc_merge_enc.v
				${tempDir}/user_design/rtl/ecc/mig_7series_v1_9_ecc_dec_fix.v -> ${dstDir}/mig_7series_v1_9_ecc_dec_fix.v
				${tempDir}/user_design/rtl/clocking/mig_7series_v1_9_tempmon.v -> ${dstDir}/mig_7series_v1_9_tempmon.v
				${tempDir}/user_design/rtl/clocking/mig_7series_v1_9_clk_ibuf.v -> ${dstDir}/mig_7series_v1_9_clk_ibuf.v
				${tempDir}/user_design/rtl/clocking/mig_7series_v1_9_iodelay_ctrl.v -> ${dstDir}/mig_7series_v1_9_iodelay_ctrl.v
				${tempDir}/user_design/rtl/clocking/mig_7series_v1_9_infrastructure.v -> ${dstDir}/mig_7series_v1_9_infrastructure.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_queue.v -> ${dstDir}/mig_7series_v1_9_bank_queue.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_compare.v -> ${dstDir}/mig_7series_v1_9_bank_compare.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_arb_select.v -> ${dstDir}/mig_7series_v1_9_arb_select.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_arb_mux.v -> ${dstDir}/mig_7series_v1_9_arb_mux.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_col_mach.v -> ${dstDir}/mig_7series_v1_9_col_mach.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_common.v -> ${dstDir}/mig_7series_v1_9_bank_common.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_state.v -> ${dstDir}/mig_7series_v1_9_bank_state.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_mc.v -> ${dstDir}/mig_7series_v1_9_mc.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_cntrl.v -> ${dstDir}/mig_7series_v1_9_bank_cntrl.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_rank_cntrl.v -> ${dstDir}/mig_7series_v1_9_rank_cntrl.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_bank_mach.v -> ${dstDir}/mig_7series_v1_9_bank_mach.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_rank_mach.v -> ${dstDir}/mig_7series_v1_9_rank_mach.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_arb_row_col.v -> ${dstDir}/mig_7series_v1_9_arb_row_col.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_rank_common.v -> ${dstDir}/mig_7series_v1_9_rank_common.v
				${tempDir}/user_design/rtl/controller/mig_7series_v1_9_round_robin_arb.v -> ${dstDir}/mig_7series_v1_9_round_robin_arb.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_wrlvl.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_wrlvl.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_init.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_init.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_dqs_found_cal_hr.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_dqs_found_cal_hr.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_mc_phy_wrapper.v -> ${dstDir}/mig_7series_v1_9_ddr_mc_phy_wrapper.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_mc_phy.v -> ${dstDir}/mig_7series_v1_9_ddr_mc_phy.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_tempmon.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_tempmon.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_prbs_rdlvl.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_prbs_rdlvl.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_ck_addr_cmd_delay.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_ck_addr_cmd_delay.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_4lanes.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_4lanes.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_wrcal.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_wrcal.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_calib_top.v -> ${dstDir}/mig_7series_v1_9_ddr_calib_top.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_if_post_fifo.v -> ${dstDir}/mig_7series_v1_9_ddr_if_post_fifo.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_rdlvl.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_rdlvl.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_dqs_found_cal.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_dqs_found_cal.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_prbs_gen.v -> ${dstDir}/mig_7series_v1_9_ddr_prbs_gen.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_wrlvl_off_delay.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_wrlvl_off_delay.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_oclkdelay_cal.v -> ${dstDir}/mig_7series_v1_9_ddr_phy_oclkdelay_cal.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_of_pre_fifo.v -> ${dstDir}/mig_7series_v1_9_ddr_of_pre_fifo.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_byte_lane.v -> ${dstDir}/mig_7series_v1_9_ddr_byte_lane.v
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_phy_top.vhd -> ${dstDir}/mig_7series_v1_9_ddr_phy_top.vhd
				${tempDir}/user_design/rtl/phy/mig_7series_v1_9_ddr_byte_group_io.v -> ${dstDir}/mig_7series_v1_9_ddr_byte_group_io.v
				${tempDir}/user_design/rtl/ip_top/mig_7series_v1_9_mem_intfc.v -> ${dstDir}/mig_7series_v1_9_mem_intfc.v
				${tempDir}/user_design/rtl/ip_top/mig_7series_v1_9_memc_ui_top_std.v -> ${dstDir}/mig_7series_v1_9_memc_ui_top_std.v
				${tempDir}/user_design/rtl/ui/mig_7series_v1_9_ui_top.v -> ${dstDir}/mig_7series_v1_9_ui_top.v
				${tempDir}/user_design/rtl/ui/mig_7series_v1_9_ui_rd_data.v -> ${dstDir}/mig_7series_v1_9_ui_rd_data.v
				${tempDir}/user_design/rtl/ui/mig_7series_v1_9_ui_wr_data.v -> ${dstDir}/mig_7series_v1_9_ui_wr_data.v
				${tempDir}/user_design/rtl/ui/mig_7series_v1_9_ui_cmd.v -> ${dstDir}/mig_7series_v1_9_ui_cmd.v
				${tempDir}/user_design/rtl/${TopLevel}.vhd -> ${dstDir}/${TopLevel}_top.vhd
			 ${SPECIAL:OutputDir}/${TopLevel}/user_design/constraints/${TopLevel}.ucf -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ncf

# step 2: generate netlist
[XST.xil.mig.KC705_MT8JTF12864HZ_1G6.2.nl]
XSTConstraintsFile =	${XSTDir}/${TopLevel}.xcf
# set TEMP_MON_CONTROL="EXTERNAL" if the temperature is supplied by an external XADC instance
XSTOption.Generics =	TEMP_MON_CONTROL="INTERNAL"
PostCopy.Rule = ${SPECIAL:OutputDir}/${TopLevel}.ngc -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.ngc
		 	 ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}_top.vhd -> ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl
PostReplace.Rule = ${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :d: "(architecture arch_mig.* of ${TopLevel} is).*(end architecture arch_mig.*;)" -> "\1\nbegin\n\2"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :d: "generic.*port\s+\(" -> "port ("
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "DQ_WIDTH" -> "64"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "DQS_WIDTH" -> "8"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "ROW_WIDTH" -> "14"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "BANK_WIDTH" -> "3"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "CK_WIDTH" -> "1"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "CKE_WIDTH" -> "1"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "CS_WIDTH" -> "1"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "nCS_PER_RANK" -> "1"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "DM_WIDTH" -> "8"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "ODT_WIDTH" -> "1"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "ADDR_WIDTH" -> "28"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "nCK_PER_CLK" -> "4"
					${PoC:NLDir}/${SPECIAL:Device}/${RelDir}/${TopLevel}.vhdl :: "PAYLOAD_WIDTH" -> "64"
